//Установка prisma в nest команды: npm install prisma Далее все команды через npx    npx prisma  npx prisma init
//Необходимо создать файл prisma.service.ts
//.env файл автоматически создается в нем ссылка на БД postgresql DATABASE_URL 
//Команды для добавления схем npx prisma db push    npx prisma generate 
//Далее все изменения в схемах делать только через миграции пример:
//npx prisma migrate dev --name add_password_role_to_user  название миграции add_password_role_to_user
//npx prisma generate - после создания миграции делать чтобы синронизировать изменения схемы модели с БД
//nest g res название --no-spec  cоздание сразу папки с модулем контролером и сервесом
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

//Схемы для таблиц
//Если много таблиц то можно разделить на отдельные файлы
//Связей posts    Post[] comments Comment[]... не видно в БД через pgAdmin и в приходящем ответе с сервера но они есть 
model User {
  id String @id @default(cuid())

  fullName String
  email    String    @unique
  password String
  role     String
  posts    Post[]
  comments Comment[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("users")
}

model Post {
  id String @id @default(cuid())

  theme    String
  content  String
  author   User      @relation(fields: [authorId], references: [id])
  authorId String    @map("author_id")
  comments Comment[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  //Изменяю название на "posts" таблицы в БД 
  @@map("posts")
}

//Модель для комментариев
model Comment {
  id String @id @default(cuid())

  text     String
  author   User   @relation(fields: [authorId], references: [id])
  authorId String @map("author_id")

  post   Post   @relation(fields: [postId], references: [id])
  postId String @map("post_id")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  //Изменяю название на "comments" таблицы в БД 
  @@map("comments")
}

//Модель для чата
model Message {
  id String @id @default(cuid())

  userId   String
  userName String
  text     String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  @@map("messages")
}
